#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#define MAX_LINE_LENGTH 1024
#define MAX_COLUMNS 20
#define MAX_CRIMES 20

struct CrimeData {
	char crime_name[100];
	char crime_sname[100];
	int occurrences[MAX_COLUMNS - 1];
};

void trim_whitespace(char *str) {
	char *end;
	
	while (isspace((unsigned char)*str)) str++;
	
	if (*str == 0) return;
	
	end = str + strlen(str) -1;
	while (end > str && isspace((unsigned char)*end)) end--;
	
	end[1] = '\0';	
}
int parse_int(const char *str) {
	int value = 0;
	if (sscanf(str, "%d", &value) != 1) {
		return -1;
	}
	return value;
}
int main() {
	FILE *input_file = fopen("C:\\Users\\user\\Desktop\\2022_crime.csv", "r");
	if (input_file == NULL) {
		perror("File open failed.\n");
		return 1;
	}
	FILE *output_file = fopen("C:\\Users\\user\\Desktop\\2022_total.csv", "w");
	if (output_file == NULL) {
		perror("File wright failed.\n");
		fclose(input_file);
		return 1;
	}
	char line[MAX_LINE_LENGTH];
	int row_count = 0;
	struct CrimeData crimes[MAX_CRIMES];
	int column_count = 0;
	if (fgets(line, sizeof(line), input_file)) {
		trim_whitespace(line);
		char *token = strtok(line, ",");
		fprintf(output_file, "2018_crime");
		while (token != NULL) {
			trim_whitespace(token);
			if (column_count > 0) {
				fprintf(output_file, ",%s", token);
			}
			column_count++;
			token = strtok(NULL, ",");
		}
		fprintf(output_file, "\n");
	}
	while (fgets(line, sizeof(line), input_file)) {
		trim_whitespace(line);
		char *token = strtok(line, ",");
		int col_index = 1;

		if (token != NULL) {
			trim_whitespace(token);
			strncpy(crimes[row_count].crime_name, token, sizeof(crimes[row_count].crime_name) - 1);
            crimes[row_count].crime_name[sizeof(crimes[row_count].crime_name) - 1] = '\0';
        }
        token = strtok(NULL, ",");
		if (token != NULL) {
			trim_whitespace(token);
			strncpy(crimes[row_count].crime_sname, token, sizeof(crimes[row_count].crime_sname) - 1);
            crimes[row_count].crime_sname[sizeof(crimes[row_count].crime_sname) - 1] = '\0';
        }
        token = strtok(NULL, ",");

        while (token != NULL) {
        	trim_whitespace(token);
			int occurrences = parse_int(token);
			crimes[row_count].occurrences[col_index] = occurrences;
			col_index++;
			token = strtok(NULL, ",");
		}

		
		fprintf(output_file, "%s,", crimes[row_count].crime_name);
		fprintf(output_file, "%s", crimes[row_count].crime_sname);
		for (int i = 1; i < column_count - 1; i++) {
			fprintf(output_file, ",%d", crimes[row_count].occurrences[i]);
		}
		fprintf(output_file, "\n");
		row_count++;
	}
	fclose(input_file);
	fclose(output_file);
	
	return 0;
}
